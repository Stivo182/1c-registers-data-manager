#Область ОписаниеПеременных

&НаКлиенте
Перем КэшОписаниеПолейПоЭлементам;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Параметры.Заголовок;
	ОтображатьФлажок = Параметры.ОтображатьФлажок;
	
	Если Параметры.ОписаниеПолей = Неопределено Тогда
		ВызватьИсключение "Не передано описание полей";
	КонецЕсли;
	
	ОписаниеПолей = Новый ФиксированныйМассив(Параметры.ОписаниеПолей);
		
	ДобавитьРеквизиты();
	ДобавитьЭлементы();
	ЗаполнитьДаннымиЗаписи(Параметры.ДанныеЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура;
	Для Каждого ОписаниеПоля Из ОписаниеПолей Цикл
		Если ОтображатьФлажок 
			И ЭтотОбъект["ФлажокЗапись" + ОписаниеПоля.Имя] Или Не ОтображатьФлажок Тогда
				
			Значение = ЭтотОбъект[ИмяПрефиксаПоля() + ОписаниеПоля.Имя];
			
			Если ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
				Значение = УникальныйИдентификаторИзСтроки(Значение);
				Если Значение = Неопределено Тогда
					ВызватьИсключение СтрШаблон("Неверное значение в поле '%1'", ОписаниеПоля.Заголовок);
				КонецЕсли;	
			КонецЕсли;
			
			Результат.Вставить(ОписаниеПоля.Имя, Значение);	
			
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеОбработчикиСобытий

&НаКлиенте
Процедура ПриИзмененииЗначения(Элемент)
	УстановитьФлажокПриИзмененииЗначения(Элемент);
	ПроверитьВалидностьУникальногоИдентификатора(Элемент);
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура СгенерироватьУникальныйИдентификатор(Команда)
	ИмяПоля = СтрЗаменить(Команда.Имя, "СгенерироватьУникальныйИдентификатор", "");
	ЭтотОбъект[ИмяПоля] = Строка(Новый УникальныйИдентификатор());
	ПриИзмененииЗначения(Элементы[ИмяПоля]);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Функция ОписаниеПоляЭлемента(Элемент)
	
	Если КэшОписаниеПолейПоЭлементам = Неопределено Тогда
		КэшОписаниеПолейПоЭлементам = Новый Соответствие();
	КонецЕсли;
	
	ОписаниеПоля = КэшОписаниеПолейПоЭлементам[Элемент];
	Если Не ОписаниеПоля = Неопределено Тогда
		Возврат ОписаниеПоля;
	КонецЕсли;
	
	Имя = Сред(Элемент.Имя, СтрДлина(ИмяПрефиксаПоля()) + 1);
	
	Для Каждого ОписаниеПоля Из ОписаниеПолей Цикл
		Если ОписаниеПоля.Имя = Имя Тогда
			КэшОписаниеПолейПоЭлементам.Вставить(Элемент, ОписаниеПоля);
			Возврат ОписаниеПоля;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура ДобавитьРеквизиты()
	
	НовыеРеквизиты = Новый Массив;
	
	Для Каждого ОписаниеПоля Из ОписаниеПолей Цикл
		
		Имя = ИмяПрефиксаПоля() + ОписаниеПоля.Имя;
		
		ОписаниеТипов = ОписаниеПоля.ТипЗначения;
		
		Если ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
			ОписаниеТипов = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36));
		КонецЕсли;
				
		НовыйРеквизит = Новый РеквизитФормы(Имя, ОписаниеТипов,, ОписаниеПоля.Заголовок);
		
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("Флажок" + Имя, Новый ОписаниеТипов("Булево"));
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		
		ИменаРеквизитов.Добавить(Имя, ОписаниеПоля.Имя);
		
	КонецЦикла;

	ИзменитьРеквизиты(НовыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементы() 
		
	Для Каждого ОписаниеПоля Из ОписаниеПолей Цикл
		
		Имя = ИмяПрефиксаПоля() + ОписаниеПоля.Имя;
		
		ЭлементГруппа = Элементы.Добавить("Группа" + Имя, Тип("ГруппаФормы"), ЭтотОбъект);
		ЭлементГруппа.Вид 				  = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппа.Группировка 		  = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЭлементГруппа.Отображение 		  = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппа.ОтображатьЗаголовок = Ложь;
		
		Если ОтображатьФлажок Тогда
			НовыйЭлемент = Элементы.Добавить("Флажок" + Имя, Тип("ПолеФормы"), ЭлементГруппа);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ПутьКДанным = "Флажок" + Имя;	
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		КонецЕсли;
			
		НовыйЭлемент = Элементы.Добавить(Имя, Тип("ПолеФормы"), ЭлементГруппа);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = Имя;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииЗначения");
		
		Если ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
			ДобавитьКнопкуГенерацииУникальногоИдентификатора(Имя, ЭлементГруппа);
		КонецЕсли;		
		
		Если ОписаниеПоля.Имя = "НомерСтроки" Тогда
			НастроитьПолеНомерСтроки(НовыйЭлемент);
		КонецЕсли;
		
		Если ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
			НастроитьПолеУникальныйИдентификатор(НовыйЭлемент);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиЗаписи(ДанныеЗаписи)
	
	Если ДанныеЗаписи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеПоля Из ОписаниеПолей Цикл		
		Имя = ИмяПрефиксаПоля() + ОписаниеПоля.Имя;
		
		Если ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
			ЭтотОбъект[Имя] = Строка(ДанныеЗаписи[ОписаниеПоля.Имя]);
		Иначе
			ЭтотОбъект[Имя] = ДанныеЗаписи[ОписаниеПоля.Имя];
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеНомерСтроки(Элемент)
	Элемент.Подсказка = "Новая запись добавится быстрее в регистр, если значение номера строка равно ""0""";
	Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеУникальныйИдентификатор(Элемент)
	Элемент.Маска = "NNNNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN";
КонецПроцедуры

&НаСервере
Процедура ДобавитьКнопкуГенерацииУникальногоИдентификатора(ИмяПоля, ЭлементГруппа)

	ИмяКоманды = ИмяПоля + "СгенерироватьУникальныйИдентификатор";
	
	Команда = Команды.Добавить(ИмяКоманды);
	Команда.Заголовок = "Сгенерировать";
	Команда.Действие = "СгенерироватьУникальныйИдентификатор";
		
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ЭлементГруппа);
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
				
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВалидностьУникальногоИдентификатора(Элемент)
	
	ОписаниеПоля = ОписаниеПоляЭлемента(Элемент);
	Если Не ОписаниеПоля.ТипЗначения.СодержитТип(Тип("УникальныйИдентификатор")) Тогда
		Возврат;		
	КонецЕсли; 
	
	Значение = ЭтотОбъект[Элемент.Имя];
	ГУИД = УникальныйИдентификаторИзСтроки(Значение);
	
	Если Не ГУИД = Неопределено Тогда
		Элемент.ЦветТекста = ЦветАвто();
	Иначе
		Элемент.ЦветТекста = ЦветТекстаКрасный();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажокПриИзмененииЗначения(Элемент)
	ЭтотОбъект["Флажок" + Элемент.Имя] = ЗначениеЗаполнено(ЭтотОбъект[Элемент.Имя]) Или ЭтотОбъект["Флажок" + Элемент.Имя];
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УникальныйИдентификаторИзСтроки(Строка)
		
	Если Не ЗначениеЗаполнено(Строка) Тогда
		Возврат ПустойУникальныйИдентификатор();
	КонецЕсли;
	
	Попытка
		Возврат Новый УникальныйИдентификатор(Строка);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПустойУникальныйИдентификатор()
	Возврат Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяПрефиксаПоля()
	Возврат "Запись";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЦветТекстаКрасный()
	Возврат Новый Цвет(255, 0, 0);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЦветАвто()
	Возврат Новый Цвет();
КонецФункции

#КонецОбласти